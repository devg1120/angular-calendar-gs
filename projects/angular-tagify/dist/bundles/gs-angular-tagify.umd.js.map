{"version":3,"file":"gs-angular-tagify.umd.js","sources":["ng://@gs/angular-tagify/lib/tagify.service.ts","ng://@gs/angular-tagify/lib/tagify.component.ts","ng://@gs/angular-tagify/lib/tagify.module.ts"],"sourcesContent":["import {ElementRef, Injectable} from '@angular/core';\nimport * as Tagify from '@yaireo/tagify';\nimport { SettingsModel } from './tagify.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TagifyService {\n\n  private tagify: Tagify;\n\n  constructor() {}\n\n  /** @description Singleton used by TagifyComponent to a ref to tagify\n   * @returns tagify instance\n   */\n  getTagifyRef(tagifyInputRef: ElementRef, settings: SettingsModel) {\n    if (arguments.length === 0) return;\n    if (this.tagify) return this.tagify;\n    this.tagify = new Tagify( tagifyInputRef, settings);\n    //console.log(\"tagify\",this.tagify);\n    return this.tagify;\n  }\n\n  /**\n   * @description removes all tags\n   */\n  public removeAll() {\n    return this.tagify.removeAllTags();\n  }\n\n  /**\n   * @description add multiple tags\n   */\n  public addTags(tags) {\n    return this.tagify.addTags(tags);\n  }\n\n  /**\n   * @description destroy dom and everything\n   */\n  public destroy() {\n    return this.tagify.destroy();\n  }\n}\n","import {AfterViewInit, ElementRef, Component, EventEmitter, Input, Output, ViewChild} from '@angular/core';\nimport {TagifyService} from './tagify.service';\n\n\nexport interface SettingsModel {\n  delimiters?: string;\n  pattern?: string;\n  mode?: string;\n  duplicates?: boolean;\n  enforceWhitelist?: boolean;\n  autocomplete?: boolean;\n  whitelist?: string[];\n  blacklist?: string[];\n  addTagOnBlur?: boolean;\n  callbacks?: Object;\n  maxTags?: number;\n  transformTag?: Function;\n  tagTemplate?: Function;\n  'dropdown.enabled'?: number;\n  'dropdown.maxItems'?: string;\n  'dropdown.classname'?: string;\n  'dropdown.itemTemplate'?; Function;\n}\n\n\n@Component({\n  selector: 'tagify',\n  template: `<input *ngIf=\"settings\" #tagifyInputRef/>`\n  //styleUrls: ['./tagify.scss']\n})\nexport class TagifyComponent implements AfterViewInit {\n  @Output() add = new EventEmitter(); // returns the added tag + updated tags list\n  @Output() remove = new EventEmitter(); // returns the updated tags list\n  @Input() settings: SettingsModel; // get possible tagify settings\n\n  constructor(private tagifyService: TagifyService) { }\n\n  //@ViewChild('tagifyInputRef') tagifyInputRef: any;\n  @ViewChild('tagifyInputRef',{static: false}) public tagifyInputRef: ElementRef;  //GS\n\n  private tagify;\n\n  ngAfterViewInit() {\n    if (!this.settings) return;\n    this.settings.callbacks = {\n      add: () => this.add.emit({\n        tags: this.tagify.value,\n        added: this.tagify.value[this.tagify.value.length - 1]\n      }),\n      remove: () => this.remove.emit(this.tagify.value)\n    };\n    //console.dir(this.tagifyInputRef);\n    this.tagify = this.tagifyService.getTagifyRef(this.tagifyInputRef.nativeElement, this.settings);\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TagifyComponent } from './tagify.component';\nimport {TagifyService} from './tagify.service';\n\n@NgModule({\n  declarations: [TagifyComponent],\n  exports: [TagifyComponent],\n  imports: [CommonModule],\n  providers: [TagifyService],\n})\nexport class TagifyModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: TagifyModule,\n      providers: [ TagifyService ]\n    };\n  }\n}\n"],"names":["Injectable","EventEmitter","Component","Output","Input","ViewChild","NgModule","CommonModule"],"mappings":";;;;;;;;;;;AAAA;QAWE;SAAgB;;;;;;;;;;QAKhB,oCAAY;;;;;;QAAZ,UAAa,cAA0B,EAAE,QAAuB;YAC9D,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC;gBAAE,OAAO;YACnC,IAAI,IAAI,CAAC,MAAM;gBAAE,OAAO,IAAI,CAAC,MAAM,CAAC;YACpC,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,CAAE,cAAc,EAAE,QAAQ,CAAC,CAAC;;YAEpD,OAAO,IAAI,CAAC,MAAM,CAAC;SACpB;;;;;;;;QAKM,iCAAS;;;;QAAhB;YACE,OAAO,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC;SACpC;;;;;;;;;QAKM,+BAAO;;;;;QAAd,UAAe,IAAI;YACjB,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SAClC;;;;;;;;QAKM,+BAAO;;;;QAAd;YACE,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;SAC9B;;oBAvCFA,eAAU,SAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;;4BAND;KAIA,IAwCC;;;;;;QAnCC,+BAAuB;;;;;;;;ICTzB;;;IAIA,4BAkBC;;;QAjBC,mCAAoB;;QACpB,gCAAiB;;QACjB,6BAAc;;QACd,mCAAqB;;QACrB,yCAA2B;;QAC3B,qCAAuB;;QACvB,kCAAqB;;QACrB,kCAAqB;;QACrB,qCAAuB;;QACvB,kCAAmB;;QACnB,gCAAiB;;QACjB,qCAAwB;;QACxB,oCAAuB;;;;;;;;;;QAIG,iCAAS;;AAIrC;QAUE,yBAAoB,aAA4B;YAA5B,kBAAa,GAAb,aAAa,CAAe;YAJtC,QAAG,GAAG,IAAIC,iBAAY,EAAE,CAAC;;YACzB,WAAM,GAAG,IAAIA,iBAAY,EAAE,CAAC;SAGe;;;;QAOrD,yCAAe;;;QAAf;YAAA,iBAWC;YAVC,IAAI,CAAC,IAAI,CAAC,QAAQ;gBAAE,OAAO;YAC3B,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG;gBACxB,GAAG;;;gBAAE,cAAM,OAAA,KAAI,CAAC,GAAG,CAAC,IAAI,CAAC;oBACvB,IAAI,EAAE,KAAI,CAAC,MAAM,CAAC,KAAK;oBACvB,KAAK,EAAE,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;iBACvD,CAAC,GAAA,CAAA;gBACF,MAAM;;;gBAAE,cAAM,OAAA,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAA,CAAA;aAClD,CAAC;;YAEF,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;SACjG;;oBA5BFC,cAAS,SAAC;wBACT,QAAQ,EAAE,QAAQ;wBAClB,QAAQ,EAAE,6CAA2C;;qBAEtD;;;;oBA5BO,aAAa;;;0BA8BlBC,WAAM;6BACNA,WAAM;+BACNC,UAAK;qCAKLC,cAAS,SAAC,gBAAgB,EAAC,EAAC,MAAM,EAAE,KAAK,EAAC;;QAgB7C,sBAAC;KA7BD,IA6BC;;;QAvBC,8BAAmC;;QACnC,iCAAsC;;QACtC,mCAAiC;;QAKjC,yCAA+E;;;;;QAE/E,iCAAe;;;;;QALH,wCAAoC;;;;;;;;ACnClD;QAKA;SAaC;;;;QANQ,oBAAO;;;QAAd;YACE,OAAO;gBACL,QAAQ,EAAE,YAAY;gBACtB,SAAS,EAAE,CAAE,aAAa,CAAE;aAC7B,CAAC;SACH;;oBAZFC,aAAQ,SAAC;wBACR,YAAY,EAAE,CAAC,eAAe,CAAC;wBAC/B,OAAO,EAAE,CAAC,eAAe,CAAC;wBAC1B,OAAO,EAAE,CAACC,mBAAY,CAAC;wBACvB,SAAS,EAAE,CAAC,aAAa,CAAC;qBAC3B;;QAQD,mBAAC;KAbD;;;;;;;;;;;;;;"}